print("MSE", sd(Blood1$SystolicBP)^2)
cat("MSE", sd(Blood1$SystolicBP)^2)
Blood1$Overwt
cat("MSE:", sd(Blood1$SystolicBP)^2)
sum(Blood1$Overwt==0)
cat("MSE:", sd(Blood1$SystolicBP)^2, "\n")
cat("MSE:", sd(Blood1$SystolicBP)^2, "\n")
sum(Blood1$Overwt==0)
cat("MSE:", sd(Blood1$SystolicBP)^2, "\n")
sum(Blood1$Overwt==0)
sum(Blood1$Overwt==1)
sum(Blood1$Overwt==2)
cat("SE:", ( 783.7171*(1/187.0 + 0.25/109.0 + 0.25/204) )^0.5)
```{r}
m0 = mean(Blood1$SystolicBP[Blood1$Overwt==0])
m1 = mean(Blood1$SystolicBP[Blood1$Overwt==1])
m2 = mean(Blood1$SystolicBP[Blood1$Overwt==2])
m0 - 0.5(m1+m2)
m0 = mean(Blood1$SystolicBP[Blood1$Overwt==0])
m1 = mean(Blood1$SystolicBP[Blood1$Overwt==1])
m2 = mean(Blood1$SystolicBP[Blood1$Overwt==2])
m0 - 0.5*(m1+m2)
se <- ( 783.7171 * ( 1/187.0 + 0.25/109.0 + 0.25/204 ) )^0.5
cat("SE:", se)
m0 <- mean(Blood1$SystolicBP[Blood1$Overwt==0])
m1 <- mean(Blood1$SystolicBP[Blood1$Overwt==1])
m2 <- mean(Blood1$SystolicBP[Blood1$Overwt==2])
m0 - 0.5*(m1+m2)
t = (m0 - 0.5*(m1+m2))/se
t = (m0 - 0.5*(m1+m2))/se
cat(t)
t = (m0 - 0.5*(m1+m2))/se
cat(t)
t.test(t)
t = (m0 - 0.5*(m1+m2))/se
cat(t)
pt(t)
t = (m0 - 0.5*(m1+m2))/se
cat(t)
pt(t, length(Blood1$SystolicBP)-1)
t = (m0 - 0.5*(m1+m2))/se
cat(t)
cat("p-value", pt(t, length(Blood1$SystolicBP)-1))
t = (m0 - 0.5*(m1+m2))/se
cat("p-value", pt(t, length(Blood1$SystolicBP)-1))
data("CloudSeeding")
data("CloudSeeding")
stripchart(CloudSeeding$TE~CloudSeeding$Seeded, method="stack", pch=16, col=c("purple", "blue"))
data("CloudSeeding")
stripchart(CloudSeeding$TE~CloudSeeding$Seeded, pch=16, col=c("purple", "blue"))
, method="stack"
data("CloudSeeding")
stripchart(CloudSeeding$TE~CloudSeeding$Seeded, method="stack", pch=16, col=c("purple", "blue"))
data("CloudSeeding")
stripchart(CloudSeeding$TE~CloudSeeding$Seeded, method="stack", pch=1, col=c("purple", "blue"))
data("CloudSeeding")
stripchart(CloudSeeding$TE~CloudSeeding$Seeded, method="stack", pch=16, col=c("purple", "blue"))
data("CloudSeeding")
stripchart(CloudSeeding$TE~CloudSeeding$Seeded, pch=16, col=c("purple", "blue"))
, method="stack"
data("CloudSeeding")
stripchart(CloudSeeding$TE~CloudSeeding$Seeded, method="stack", pch=16, col=c("purple", "blue"))
wilcox.test(CloudSeeding$TE~CloudSeeding$Seeded,conf.int=TRUE)
data("CloudSeeding")
stripchart(CloudSeeding$TE~CloudSeeding$Season, method="stack", pch=16, col=c("purple", "blue"))
data("CloudSeeding")
CloudSeeding$Season
stripchart(CloudSeeding$TE~CloudSeeding$Season, method="stack", pch=16, col=c("purple", "blue"))
data("CloudSeeding2")
CloudSeeding2$Season
stripchart(CloudSeeding$TE~CloudSeeding$Season, method="stack", pch=16, col=c("purple", "blue"))
data("CloudSeeding2")
CloudSeeding2$Season
stripchart(CloudSeeding2$TE~CloudSeeding2$Season, method="stack", pch=16, col=c("purple", "blue"))
data("CloudSeeding2")
stripchart(CloudSeeding2$TE~CloudSeeding2$Season, method="stack", pch=16, col=c("purple", "blue"))
kruskal.test(CloudSeeding2$TE~CloudSeeding2$Season)
data("Olives")
Olives$Day
m <- aov(exp(Olives$Fenthion)~Olives$Day)
data("Olives")
m <- aov(exp(Olives$Fenthion)~Olives$Day)
summary(m)
data("Olives")
head(Olives)
m <- aov(exp(Olives$Fenthion)~Olives$Day)
summary(m)
data("Olives")
str(Olives)
m <- aov(exp(Olives$Fenthion)~Olives$Day)
summary(m)
data("Olives")
m <- aov(exp(Olives$Fenthion)~Olives$Day)
summary(m)
lm <- lm(Olives$Fenthion~Olives$)
lm <- lm(Olives$Fenthion~Olives$Day)
lm <- lm(Olives$Fenthion~Olives$Day)
lm <- lm(Olives$Fenthion~Olives$Day)
summary(lm)
data("Olives")
m <- aov(exp(Olives$Fenthion)~Olives$Day)
summary(m)
m$coefficients
lm <- lm(exp(Olives$Fenthion)~Olives$Day)
summary(lm)
lm1 <- lm(Olives$Fenthion~Olives$Day)
summary(lm1)
lm2 <- lm(exp(Olives$Fenthion)~Olives$Day)
summary(lm2)
lm <- lm(Olives$Fenthion~Olives$Time)
summary(lm)
lm <- lm(Olives$Fenthion~Olives$Time)
Olives$Time
summary(lm)
data("Olives")
m <- aov(exp(Olives$Fenthion)~Olives$Time)
summary(m)
m$coefficients
lm <- lm(exp(Olives$Fenthion)~factor(Olives$Time))
summary(lm)
data("Olives")
m <- aov(exp(Olives$Fenthion)~Olives$Time)
summary(m)
m$coefficients
lm <- lm(exp(Olives$Fenthion)~factor(Olives$Time))
summary(lm)
lm <- lm(exp(Olives$Fenthion)~Olives$Time)
summary(lm)
data("Olives")
m <- aov(exp(Olives$Fenthion)~factor(Olives$Time))
summary(m)
m$coefficients
data("FruitFlies")
lm <- lm()
data("FruitFlies")
data("FruitFlies2")
levene.test(FruitFlies2$Activity~FruitFlies2$Mated)
data("FruitFlies2")
leveneTest(FruitFlies2$Activity~FruitFlies2$Mated)
lmt <- lm(FruitFlies2$Activity~FruitFlies2$Size)
data("FruitFlies2")
lmt <- lm(FruitFlies2$Activity~FruitFlies2$Size)
data("FruitFlies2")
lmt <- lm(FruitFlies2$Activity~FruitFlies2$Size)
plot(lmt)
lm <- lm(FruitFlies2$Activity~FruitFlies2$Size + FruitFlies2$Mated)
lm <- lm(FruitFlies2$Activity~FruitFlies2$Size + FruitFlies2$Mated)
summary(lm)
lm <- lm(FruitFlies2$Activity~FruitFlies2$Size + FruitFlies2$Mated)
summary(lm)
anova(lm)
plot(m$residuals~m$fitted.values)
plot(m$residuals~m$fitted.values)
qqnorm(modlogTime$residuals, pch=16, xlab="Normal Quantiles",ylab="log(Time) Residuals")
plot(m$residuals~m$fitted.values)
qqnorm(m$residuals, pch=16, xlab="Normal Quantiles",ylab="log(Time) Residuals")
qqline(m$residuals)
plot(m$residuals~m$fitted.values)
qqnorm(m$residuals, pch=16, xlab="Normal Quantiles",ylab="Residuals")
qqline(m$residuals)
summary(aov)
summary(m)
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
library(mosaic)
library(car)
library(leaps)
library(HH)
library(ggplot2)
data("Ricci")
boxplot(Combine~Race,data=Ricci)
m <- aov(Ricci$Combine~Ricci$Race)
boxplot(m$residuals~Ricci$Race)
qqnorm(m$residuals)
qqline(m$residuals)
data("Hawks")
dotplot(Hawks$Weight~Hawks$Species)
favstats(Hawks$Weight~Hawks$Species)
pf(41.64, 2, 48, lower.tail = FALSE)
data("Meniscus")
boxplot(Meniscus$Stiffness~Meniscus$Method)
m <- aov(Meniscus$Stiffness~Meniscus$Method)
anova(m)
boxplot(Hawks$Culmen~Hawks$Species)
m <- aov(Hawks$Culmen~Hawks$Species)
anova(m)
m$coefficients
data("RiverIron")
i <- RiverIron$Iron
r <- RiverIron$River
s <- RiverIron$Site
plot(i+0.01~i)
abline(0,1,col="red",lwd=2)
u <- i[s=="Upstream"]
m <- i[s=="MidStream"]
d <- i[s=="DownStream"]
l1 <- lm(m~u)
l2 <- lm(d~m)
l3 <- lm(d~u)
points(u, m, col="black", lty=2, pch=16, cex=1.5)
abline(lm(m~u),col="black",lty=2,lwd=2)
points(u, d,col="green",lty=2,pch=15,cex=1.5)
abline(lm(d~u),col="green",lty=3,lwd=2)
points(u,d,col="blue",lty=2,pch=17,cex=1.5)
abline(lm(d~u),col="blue",lty=4,lwd=2)
l1$coefficients
l2$coefficients
l3$coefficients
data("Alfalfa")
a <- Alfalfa$Ht4[Alfalfa$Row == "a"]
b <- Alfalfa$Ht4[Alfalfa$Row == "b"]
c <- Alfalfa$Ht4[Alfalfa$Row == "c"]
d <- Alfalfa$Ht4[Alfalfa$Row == "d"]
e <- Alfalfa$Ht4[Alfalfa$Row == "e"]
w <- Alfalfa$Ht4[Alfalfa$Acid == "water"]
nw <- Alfalfa$Ht4[Alfalfa$Acid != "water"]
cat(mean(a), mean(b), mean(c), mean(d), mean(e), mean(w), mean(nw), "\n")
cat(mean(Alfalfa$Ht4), sd(Alfalfa$Ht4))
m <- aov(Alfalfa$Ht4~Alfalfa$Acid+Alfalfa$Row)
summary(m)
plot(m$residuals~m$fitted.values)
qqnorm(m$residuals, pch=16, xlab="Normal Quantiles",ylab="Residuals")
qqline(m$residuals)
summary(m)
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
library(mosaic)
library(car)
library(leaps)
library(HH)
library(ggplot2)
data("FruitFlies2")
m <- aov(Activity~Mated+Alone+Alone*Mated, data=FruitFlies2)
summary(m)
# Residuals
plot(m$residuals~m$fitted.values, pch=16, xlab="Fitted Values",ylab="Residuals")
# Quantile Plot
qqnorm(m$residuals,xlab="Normal Quantiles", pch=16, ylab="Residuals")
qqline(m$residuals)
data("Blood1")
leveneTest(Blood1$SystolicBP~factor(Blood1$Smoke))
m <- aov(Blood1$SystolicBP~factor(Blood1$Smoke))
summary(m)
m$coefficients
data("SeaSlugs")
TukeyHSD(SeaSlugs$Percent~factor(SeaSlugs$Time))
plot(TukeyHSD(SeaSlugs$Percent~factor(SeaSlugs$Time)))
cat("MSE:", sd(Blood1$SystolicBP)^2, "\n")
sum(Blood1$Overwt==0)
sum(Blood1$Overwt==1)
sum(Blood1$Overwt==2)
se <- ( 783.7171 * ( 1/187.0 + 0.25/109.0 + 0.25/204 ) )^0.5
cat("SE:", se)
m0 <- mean(Blood1$SystolicBP[Blood1$Overwt==0])
m1 <- mean(Blood1$SystolicBP[Blood1$Overwt==1])
m2 <- mean(Blood1$SystolicBP[Blood1$Overwt==2])
m0 - 0.5*(m1+m2)
t = (m0 - 0.5*(m1+m2))/se
cat("p-value:", pt(t, length(Blood1$SystolicBP)-1))
data("CloudSeeding2")
stripchart(CloudSeeding2$TE~CloudSeeding2$Season, method="stack", pch=16, col=c("purple", "blue"))
wilcox.test(CloudSeeding$TE~CloudSeeding2$Season,conf.int=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
library(mosaic)
library(car)
library(leaps)
library(HH)
library(ggplot2)
data("FruitFlies2")
m <- aov(Activity~Mated+Alone+Alone*Mated, data=FruitFlies2)
summary(m)
# Residuals
plot(m$residuals~m$fitted.values, pch=16, xlab="Fitted Values",ylab="Residuals")
# Quantile Plot
qqnorm(m$residuals,xlab="Normal Quantiles", pch=16, ylab="Residuals")
qqline(m$residuals)
data("Blood1")
leveneTest(Blood1$SystolicBP~factor(Blood1$Smoke))
m <- aov(Blood1$SystolicBP~factor(Blood1$Smoke))
summary(m)
m$coefficients
data("SeaSlugs")
TukeyHSD(SeaSlugs$Percent~factor(SeaSlugs$Time))
plot(TukeyHSD(SeaSlugs$Percent~factor(SeaSlugs$Time)))
cat("MSE:", sd(Blood1$SystolicBP)^2, "\n")
sum(Blood1$Overwt==0)
sum(Blood1$Overwt==1)
sum(Blood1$Overwt==2)
se <- ( 783.7171 * ( 1/187.0 + 0.25/109.0 + 0.25/204 ) )^0.5
cat("SE:", se)
m0 <- mean(Blood1$SystolicBP[Blood1$Overwt==0])
m1 <- mean(Blood1$SystolicBP[Blood1$Overwt==1])
m2 <- mean(Blood1$SystolicBP[Blood1$Overwt==2])
m0 - 0.5*(m1+m2)
t = (m0 - 0.5*(m1+m2))/se
cat("p-value:", pt(t, length(Blood1$SystolicBP)-1))
data("CloudSeeding2")
stripchart(CloudSeeding2$TE~CloudSeeding2$Season, method="stack", pch=16, col=c("purple", "blue"))
wilcox.test(CloudSeeding2$TE~CloudSeeding2$Season,conf.int=TRUE)
wilcox.test(CloudSeeding2$TE~factor(CloudSeeding2$Season),conf.int=TRUE)
kruskal.test(CloudSeeding2$TE~CloudSeeding2$Season,conf.int=TRUE)
kruskal.test(CloudSeeding$TE~CloudSeeding$Season,conf.int=TRUE)
wilcox.test(CloudSeeding$TE~CloudSeeding$Season,conf.int=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
library(mosaic)
library(car)
library(leaps)
library(HH)
library(ggplot2)
data("FruitFlies2")
m <- aov(Activity~Mated+Alone+Alone*Mated, data=FruitFlies2)
summary(m)
# Residuals
plot(m$residuals~m$fitted.values, pch=16, xlab="Fitted Values",ylab="Residuals")
# Quantile Plot
qqnorm(m$residuals,xlab="Normal Quantiles", pch=16, ylab="Residuals")
qqline(m$residuals)
data("Blood1")
leveneTest(Blood1$SystolicBP~factor(Blood1$Smoke))
m <- aov(Blood1$SystolicBP~factor(Blood1$Smoke))
summary(m)
m$coefficients
data("SeaSlugs")
TukeyHSD(SeaSlugs$Percent~factor(SeaSlugs$Time))
plot(TukeyHSD(SeaSlugs$Percent~factor(SeaSlugs$Time)))
cat("MSE:", sd(Blood1$SystolicBP)^2, "\n")
sum(Blood1$Overwt==0)
sum(Blood1$Overwt==1)
sum(Blood1$Overwt==2)
se <- ( 783.7171 * ( 1/187.0 + 0.25/109.0 + 0.25/204 ) )^0.5
cat("SE:", se)
m0 <- mean(Blood1$SystolicBP[Blood1$Overwt==0])
m1 <- mean(Blood1$SystolicBP[Blood1$Overwt==1])
m2 <- mean(Blood1$SystolicBP[Blood1$Overwt==2])
m0 - 0.5*(m1+m2)
t = (m0 - 0.5*(m1+m2))/se
cat("p-value:", pt(t, length(Blood1$SystolicBP)-1))
data("CloudSeeding2")
stripchart(CloudSeeding2$TE~CloudSeeding2$Season, method="stack", pch=16, col=c("purple", "blue"))
wilcox.test(CloudSeeding$TE~CloudSeeding$Season,conf.int=TRUE)
data("CloudSeeding2")
stripchart(CloudSeeding2$TE~CloudSeeding2$Seeded, method="stack", pch=16, col=c("purple", "blue"))
wilcox.test(CloudSeeding$TE~CloudSeeding$Seeded,conf.int=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(Stat2Data)
library(mosaic)
library(car)
library(leaps)
library(HH)
library(ggplot2)
data("FruitFlies2")
m <- aov(Activity~Mated+Alone+Alone*Mated, data=FruitFlies2)
summary(m)
# Residuals
plot(m$residuals~m$fitted.values, pch=16, xlab="Fitted Values",ylab="Residuals")
# Quantile Plot
qqnorm(m$residuals,xlab="Normal Quantiles", pch=16, ylab="Residuals")
qqline(m$residuals)
data("Blood1")
leveneTest(Blood1$SystolicBP~factor(Blood1$Smoke))
m <- aov(Blood1$SystolicBP~factor(Blood1$Smoke))
summary(m)
m$coefficients
data("SeaSlugs")
TukeyHSD(SeaSlugs$Percent~factor(SeaSlugs$Time))
plot(TukeyHSD(SeaSlugs$Percent~factor(SeaSlugs$Time)))
cat("MSE:", sd(Blood1$SystolicBP)^2, "\n")
sum(Blood1$Overwt==0)
sum(Blood1$Overwt==1)
sum(Blood1$Overwt==2)
se <- ( 783.7171 * ( 1/187.0 + 0.25/109.0 + 0.25/204 ) )^0.5
cat("SE:", se)
m0 <- mean(Blood1$SystolicBP[Blood1$Overwt==0])
m1 <- mean(Blood1$SystolicBP[Blood1$Overwt==1])
m2 <- mean(Blood1$SystolicBP[Blood1$Overwt==2])
m0 - 0.5*(m1+m2)
t = (m0 - 0.5*(m1+m2))/se
cat("p-value:", pt(t, length(Blood1$SystolicBP)-1))
data("CloudSeeding2")
stripchart(CloudSeeding2$TE~CloudSeeding2$Seeded, method="stack", pch=16, col=c("purple", "blue"))
wilcox.test(CloudSeeding$TE~CloudSeeding$Seeded,conf.int=TRUE)
data("CloudSeeding2")
stripchart(CloudSeeding2$TE~CloudSeeding2$Season, method="stack", pch=16, col=c("purple", "blue"))
kruskal.test(CloudSeeding2$TE~CloudSeeding2$Season)
data("Olives")
m <- aov(exp(Olives$Fenthion)~factor(Olives$Time))
summary(m)
m$coefficients
lm <- lm(exp(Olives$Fenthion)~factor(Olives$Time))
summary(lm)
lm <- lm(exp(Olives$Fenthion)~Olives$Time)
summary(lm)
data("FruitFlies2")
lmt <- lm(FruitFlies2$Activity~FruitFlies2$Size)
plot(lmt)
lm <- lm(FruitFlies2$Activity~FruitFlies2$Size + FruitFlies2$Mated)
summary(lm)
anova(lm)
wilcox.test(CloudSeeding2$TE~CloudSeeding2$Seeded,conf.int=TRUE)
install.packages("landsat")
citation()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(zeallot)
library(boot)
setwd("~/Research/Pioneer/Project/Poverty-Prediction-by-Satellite-Imagery/scripts/")
setwd("~/Research/Pioneer/Project/Predicting-Poverty/scripts/")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(zeallot)
library(boot)
setwd("~/Research/Pioneer/Project/Predicting-Poverty/scripts/")
lm <- lm(wealth~mean + median + std + max + min, data=df)
df <- read.csv("../processed/nl_wealth_data.csv")
lm <- lm(wealth~mean + median + std + max + min, data=df)
plot(lm)
summary(lm)
lm <- lm(wealth~mean + median + min, data=df)
plot(lm)
summary(lm)
lm <- lm(wealth~mean + median + min, data=df)
lm <- lm(wealth~mean + median + min, data=df)
plot(lm)
summary(lm)
lm <- lm(wealth~mean, data=df)
lm <- lm(wealth~mean, data=df)
plot(lm)
summary(lm)
lm <- lm(wealth~mean, data=df)
plot(lm)
summary(lm)
abline(lm)
lm <- lm(wealth~mean + median + min, data=df)
plot(wealth~mean + median + min, data=df)
abline(lm)
plot(lm)
summary(lm)
lm <- lm(wealth~mean, data=df)
plot(wealth~mean, data=df)
abline(lm)
plot(lm)
summary(lm)
library(ggplot2)
library(zeallot)
library(boot)
# Reading Processed data
setwd("~/Research/Pioneer/Project/Poverty-Prediction-by-Satellite-Imagery/scripts/")
# Reading Processed data
setwd("~/Research/Pioneer/Project/Poverty-Prediction-by-Satellite-Imagery/scripts/")
# Reading Processed data
setwd("~/Research/Pioneer/Project/Predicting-Poverty/scripts/")
nl <- read.csv("../processed/nl_wealth_data.csv")
dhs <- read.csv("../data/dhs/rwanda_dhs_cluster.csv")
head(dhs)
str(dhs)
install.packages("corrplot")
library(corrplot)
corrplot(dhs)
df <- merge(nl, dhs, by.x="DHSClust", by.y="id")
df <- merge(nl, dhs, by.x="DHSCLUST", by.y="id")
dhs$DHSID
dhs$DHSCLUST
df <- merge(nl, dhs, by.x="DHSCLUST", by.y="id")
df <- merge(nl, dhs, by.y="id", by.y="DHSCLUST")
df <- merge(nl, dhs, by.x="id", by.y="DHSCLUST")
str(df)
df <- subset(df, select = -c(
"X", "DHSID",
"Rainfall_2015", "Malaria_2015", "ITN_Coverage_2015",
"Enhanced_Vegetation_Index_2015", "BUILT_Population_2014",
"All_Population_Density_2015", "All_Population_Density_2015",
))
df <- subset(df, select = -c(
"X", "DHSID",
"Rainfall_2015", "Malaria_2015", "ITN_Coverage_2015",
"Enhanced_Vegetation_Index_2015", "BUILT_Population_2014",
"All_Population_Density_2015", "All_Population_Density_2015"
))
df <- df[names(df) %in% c(
"X", "DHSID",
"Rainfall_2015", "Malaria_2015", "ITN_Coverage_2015",
"Enhanced_Vegetation_Index_2015", "BUILT_Population_2014",
"All_Population_Density_2015", "All_Population_Density_2015"
)]
str(df)
df <- df[, !(names(df) %in% c(
"X", "DHSID",
"Rainfall_2015", "Malaria_2015", "ITN_Coverage_2015",
"Enhanced_Vegetation_Index_2015", "BUILT_Population_2014",
"All_Population_Density_2015", "All_Population_Density_2015"
))]
str(df)
# Reading Processed data
setwd("~/Research/Pioneer/Project/Predicting-Poverty/scripts/")
nl <- read.csv("../processed/nl_wealth_data.csv")
dhs <- read.csv("../data/dhs/rwanda_dhs_cluster.csv")
df <- merge(nl, dhs, by.x="id", by.y="DHSCLUST")
df <- df[, !(names(df) %in% c(
"X", "DHSID",
"Rainfall_2015", "Malaria_2015", "ITN_Coverage_2015",
"Enhanced_Vegetation_Index_2015", "BUILT_Population_2014",
"All_Population_Density_2015", "All_Population_Density_2015"
))]
str(df)
corrplot(dhs)
cov(df, use="complete.obs")
cov(df, use="complete.obs", method = "pearson")
library(ggcorrplot)
ggcorrplot(cov(df, use="complete.obs", method = "pearson"))
ggcorrplot(cov(df))
